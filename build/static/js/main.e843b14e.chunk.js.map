{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/CreateBlogForm.js","components/Notification.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","loggedUsername","handleLike","handleDelete","useState","showDetails","setShowDetails","addLike","likedBlog","likes","id","deleteBlog","window","confirm","title","author","className","type","onClick","url","user","name","username","showBlogDetails","LoginForm","onSubmit","handleUsernameChange","password","handlePasswordChange","htmlFor","value","onChange","CreateBlogForm","createBlog","setTitle","setAuthor","setUrl","event","preventDefault","target","Notification","notification","message","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","response","data","update","put","remove","delete","setToken","newToken","getAll","get","then","login","credentials","App","blogs","setBlogs","setUsername","setPassword","setUser","setNotification","useEffect","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","showNotification","setTimeout","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","handleCreateBlog","blogObject","blogFormRef","current","createdBlog","concat","editBlog","map","filter","useRef","marginBottom","sort","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e843b14e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './Blog.css'\n\nconst Blog = ({ blog, loggedUsername, handleLike, handleDelete }) => {\n  const [showDetails, setShowDetails] = useState(false)\n\n  const toggleVisibility = () => {\n    setShowDetails(!showDetails)\n  }\n\n  const addLike = () => {\n    const likedBlog = {\n      ...blog,\n      likes: blog.likes + 1\n    }\n    handleLike(blog.id, likedBlog)\n  }\n\n  const deleteBlog = () => {\n    if (window.confirm(`Are you sure you want to delete ${blog.title} by ${blog.author}?`))\n      handleDelete(blog.id)\n  }\n\n  const deleteButton = () =>  (\n    <><button type=\"button\" onClick={deleteBlog}>Delete</button></>\n  )\n\n  const showBlogDetails = () => (\n    <div className=\"blogDetails\">\n      <div>{blog.url}</div>\n      <div>Likes: {blog.likes} <button className=\"likeButton\" type=\"button\" onClick={addLike}>Like</button></div>\n      <div>{blog.user?.name}</div>\n      {blog.user?.username === loggedUsername && deleteButton()}\n    </div>\n  )\n\n  return (\n    <div id={blog.id} className=\"blog\">\n      {blog.title} {blog.author}\n      <button className=\"showButton\" type=\"button\" onClick={toggleVisibility}>{showDetails ? 'Hide' : 'Show'}</button>\n      { showDetails && showBlogDetails() }\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './LoginForm.css'\n\nconst LoginForm = ({ onSubmit,\n  username, handleUsernameChange,\n  password, handlePasswordChange }) => (\n  <>\n    <form id=\"loginForm\" onSubmit={onSubmit}>\n      <label htmlFor=\"Username\">Username</label>\n      <input type=\"text\"\n        value={username}\n        id=\"Username\"\n        name=\"Username\"\n        onChange={handleUsernameChange} />\n\n      <label htmlFor=\"Password\">Password</label>\n      <input type=\"password\"\n        value={password}\n        id=\"Password\"\n        name=\"Password\"\n        onChange={handlePasswordChange} />\n\n      <button id=\"loginButton\" type=\"submit\">Login</button>\n    </form>\n  </>\n)\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  password: PropTypes.string.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst CreateBlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    createBlog({\n      title, author, url\n    })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <>\n      <form onSubmit={addBlog}>\n        <label htmlFor=\"Title\">Title</label>\n        <input type=\"text\"\n          value={title}\n          id=\"Title\"\n          name=\"Title\"\n          onChange={({ target }) => setTitle(target.value)} />\n\n        <label htmlFor=\"Author\">Author</label>\n        <input type=\"text\"\n          value={author}\n          id=\"Author\"\n          name=\"Author\"\n          onChange={({ target }) => setAuthor(target.value)} />\n\n        <label htmlFor=\"Url\">Url</label>\n        <input type=\"text\"\n          value={url}\n          id=\"Url\"\n          name=\"Url\"\n          onChange={({ target }) => setUrl(target.value)} />\n\n        <button id=\"createBlogButton\" type=\"submit\">Create</button>\n      </form>\n    </>\n  )\n}\n\nexport default CreateBlogForm","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { setToken, getAll, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\n\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport CreateBlogForm from './components/CreateBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n// TODO: When a blog with delete button is liked, delete button disappears\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const showNotification = (message, type) => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n      showNotification(`User ${username} logged in.`, 'message')\n    } catch (exception) {\n      showNotification('Wrong credentials.', 'error')\n    }\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n  }\n\n  const handleCreateBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n\n      const createdBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(createdBlog))\n\n      showNotification(`A new blog ${blogObject.title} by ${blogObject.author} added.`, 'message')\n    } catch (exception) {\n      showNotification('Wrong credentials.', 'error')\n    }\n  }\n\n  const handleLike = async (id, blogObject) => {\n    try {\n      const editBlog = await blogService.update(id, blogObject)\n      setBlogs(blogs.map(blog => (blog.id === editBlog.id) ? editBlog : blog))\n\n      showNotification(`Like added to blog ${blogObject.title}.`, 'message')\n    } catch (exception) {\n      showNotification('There was an error trying to like a blog.', 'error')\n    }\n  }\n  const handleDelete = async (id) => {\n    try {\n      await blogService.remove(id)\n      setBlogs(blogs.filter(blog => blog.id !== id))\n\n      showNotification('Blog deleted successfully.', 'message')\n    } catch (exception) {\n      showNotification('There was an error trying to delete a blog.', 'error')\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n      <h2>Bloglist Login</h2>\n      <LoginForm onSubmit={handleLogin}\n        username={username} handleUsernameChange={({ target }) => setUsername(target.value)}\n        password={password} handlePasswordChange={({ target }) => setPassword(target.value)} />\n    </div>\n  )\n\n  const logoutForm = () => (\n    <div style={{ marginBottom: '10px' }}>\n      Welcome, {user.name}.\n      <form onSubmit={handleLogout} style={{ display: 'inline-block' }}>\n        <button type=\"submit\">Logout</button>\n      </form>\n    </div>\n  )\n\n  const blogFormRef = useRef()\n\n  const createBlogForm = () => (\n    <div>\n      <Togglable buttonLabel=\"New blog\" ref={blogFormRef}>\n        <h2>Create Blog</h2>\n        <CreateBlogForm createBlog={handleCreateBlog} />\n      </Togglable>\n    </div>\n  )\n\n  return (\n    <div>\n      <h1>Bloglist application</h1>\n      <Notification notification={notification} />\n      {user === null ?\n        loginForm() :\n        <div>\n          <h2>blogs</h2>\n          {logoutForm()}\n          {createBlogForm()}\n          <div id=\"blogList\">\n            {\n              blogs\n                .sort((a, b) => b.likes - a.likes)\n                .map(blog =>\n                  <Blog key={blog.id} blog={blog} loggedUsername={user.username}\n                    handleLike={handleLike} handleDelete={handleDelete} />\n                )\n            }\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}